{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-29T18:04:02.348Z",
    "end": "2025-01-29T18:04:05.135Z",
    "duration": 2787,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b0dbf9df-d0be-4d31-a638-389c1e2cbaf9",
      "title": "",
      "fullFile": "cypress\\e2e\\week6\\W6Day5.Restful Booker.cy.js",
      "file": "cypress\\e2e\\week6\\W6Day5.Restful Booker.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c393bb60-d5ca-4c55-9b63-37120c1f3afa",
          "title": "Testing- Create, Update, Partially Update, and Delete Booking",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create a new booking and verify the response",
              "fullTitle": "Testing- Create, Update, Partially Update, and Delete Booking Create a new booking and verify the response",
              "timedOut": null,
              "duration": 538,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://restful-booker.herokuapp.com/booking',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  body: bookingPayload\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('bookingid');\n  // Store booking ID for further tests\n  bookingId = response.body.bookingid;\n  // Verify booking details in the response\n  const bookingResponse = response.body.booking;\n  cy.log(`Booking created successfully: ${JSON.stringify(bookingResponse)}`);\n  expect(bookingResponse.firstname).to.eq(bookingPayload.firstname);\n  expect(bookingResponse.lastname).to.eq(bookingPayload.lastname);\n  expect(bookingResponse.totalprice).to.eq(bookingPayload.totalprice);\n  expect(bookingResponse.depositpaid).to.eq(bookingPayload.depositpaid);\n  expect(bookingResponse.bookingdates.checkin).to.eq(bookingPayload.bookingdates.checkin);\n  expect(bookingResponse.bookingdates.checkout).to.eq(bookingPayload.bookingdates.checkout);\n  expect(bookingResponse.additionalneeds).to.eq(bookingPayload.additionalneeds);\n});",
              "err": {},
              "uuid": "29d1e2f7-57ec-4143-bc56-c348a61864d7",
              "parentUUID": "c393bb60-d5ca-4c55-9b63-37120c1f3afa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch booking IDs by firstname and lastname",
              "fullTitle": "Testing- Create, Update, Partially Update, and Delete Booking Fetch booking IDs by firstname and lastname",
              "timedOut": null,
              "duration": 339,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://restful-booker.herokuapp.com/booking',\n  qs: {\n    firstname: 'SAsI',\n    lastname: 'Kumar'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(`Bookings fetched successfully: ${JSON.stringify(response.body)}`);\n  // Store the fetched booking ID for further use\n  fetchedBookingId = response.body[0].bookingid;\n  cy.log(`Fetched Booking ID: ${fetchedBookingId}`);\n});",
              "err": {},
              "uuid": "11e4c9a4-1feb-4286-8147-bd487d58ca2d",
              "parentUUID": "c393bb60-d5ca-4c55-9b63-37120c1f3afa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update the existing booking and verify the response",
              "fullTitle": "Testing- Create, Update, Partially Update, and Delete Booking Update the existing booking and verify the response",
              "timedOut": null,
              "duration": 361,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const updatedBookingPayload = {\n  firstname: \"Sir Sasi -78954\",\n  lastname: \"Brown Jio\",\n  totalprice: 18200,\n  depositpaid: true,\n  bookingdates: {\n    checkin: \"2020-11-10\",\n    checkout: \"2019-01-01\"\n  },\n  additionalneeds: \"Updated V2\"\n};\ncy.request({\n  method: 'PUT',\n  url: `https://restful-booker.herokuapp.com/booking/${fetchedBookingId}`,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n    //'Cookie': 'token=abc123',   \n    'Authorization': 'Basic YWRtaW46cGFzc3dvcmQxMjM='\n  },\n  body: updatedBookingPayload,\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    // Verify updated booking details in the response\n    const bookingResponse = response.body;\n    expect(bookingResponse.firstname).to.eq(updatedBookingPayload.firstname);\n    expect(bookingResponse.lastname).to.eq(updatedBookingPayload.lastname);\n    expect(bookingResponse.totalprice).to.eq(updatedBookingPayload.totalprice);\n    expect(bookingResponse.depositpaid).to.eq(updatedBookingPayload.depositpaid);\n    expect(bookingResponse.bookingdates.checkin).to.eq(updatedBookingPayload.bookingdates.checkin);\n    expect(bookingResponse.bookingdates.checkout).to.eq(updatedBookingPayload.bookingdates.checkout);\n    expect(bookingResponse.additionalneeds).to.eq(updatedBookingPayload.additionalneeds);\n    cy.log(`Booking updated successfully: ${JSON.stringify(bookingResponse)}`);\n  }\n});",
              "err": {},
              "uuid": "6fb97a5a-9ab0-4dc9-bc34-3994f1a81c07",
              "parentUUID": "c393bb60-d5ca-4c55-9b63-37120c1f3afa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "--Update the with invalid Cookie--",
              "fullTitle": "Testing- Create, Update, Partially Update, and Delete Booking --Update the with invalid Cookie--",
              "timedOut": null,
              "duration": 722,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const updatedBookingPayload = {\n  firstname: \"invalid\",\n  lastname: \"invalid\",\n  totalprice: 1000,\n  depositpaid: true,\n  bookingdates: {\n    checkin: \"2011-01-01\",\n    checkout: \"2010-01-01\"\n  },\n  additionalneeds: \"Test Invalid Cookie\"\n};\ncy.request({\n  method: 'PUT',\n  url: `https://restful-booker.herokuapp.com/booking/${fetchedBookingId}`,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n    'Cookie': 'token=abc12332165489'\n  },\n  body: updatedBookingPayload,\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 403) {\n    cy.log('Authorization failed. Please check your token or credentials.');\n  } else {\n    expect(response.status).to.eq(200);\n  }\n});",
              "err": {},
              "uuid": "40c23fd1-9d78-4ab3-b085-2f34378ee03a",
              "parentUUID": "c393bb60-d5ca-4c55-9b63-37120c1f3afa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Partially update the existing booking and verify the response",
              "fullTitle": "Testing- Create, Update, Partially Update, and Delete Booking Partially update the existing booking and verify the response",
              "timedOut": null,
              "duration": 681,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const partialUpdatePayload = {\n  firstname: \"Sasi Jone\",\n  //update new values\n  additionalneeds: \"Update the name --- V3\"\n};\ncy.request({\n  method: 'PATCH',\n  url: `https://restful-booker.herokuapp.com/booking/${fetchedBookingId}`,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n    'Authorization': 'Basic YWRtaW46cGFzc3dvcmQxMjM='\n  },\n  body: partialUpdatePayload,\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 403) {\n    cy.log('Authorization failed. Please check your token or credentials.');\n  } else {\n    expect(response.status).to.eq(200);\n    const bookingResponse = response.body;\n    expect(bookingResponse.firstname).to.eq(partialUpdatePayload.firstname);\n    expect(bookingResponse.additionalneeds).to.eq(partialUpdatePayload.additionalneeds);\n    cy.log(`Booking partially updated successfully: ${JSON.stringify(bookingResponse)}`);\n  }\n});",
              "err": {},
              "uuid": "778513b8-433d-46fc-8235-569d9205e9f3",
              "parentUUID": "c393bb60-d5ca-4c55-9b63-37120c1f3afa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "29d1e2f7-57ec-4143-bc56-c348a61864d7",
            "11e4c9a4-1feb-4286-8147-bd487d58ca2d",
            "6fb97a5a-9ab0-4dc9-bc34-3994f1a81c07",
            "40c23fd1-9d78-4ab3-b085-2f34378ee03a",
            "778513b8-433d-46fc-8235-569d9205e9f3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2641,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}